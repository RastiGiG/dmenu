#+TITLE: DMENU - Applied Patches
#+DATE:  [2022-03-17] 
#+STARTUP: show2levels

:PROPERTIES:

* Info

An Overview of applied patches to [[id:0f0a3583-1efc-495b-b621-602382d9aba6][dmenu]] as well as their functionality

** Applying the Patches

~Patching~ is *easy* in *principle*, but you might run into errors that you have to *resolve manually*.
#+begin_src shell
  patch -p1 < [patchname].diff
#+end_src

* Patches
** Dracula
: STATUS: applied

Simple Patch, just applies the ~Dracula Color Scheme~ to [[id:0f0a3583-1efc-495b-b621-602382d9aba6][Dmenu]]

** Lineheight
: STATUS: applied

Allows the ~height~ of the ~dmenu~ bar to be adjustet via the =-h= flag

*** Example

#+begin_src shell
  dmenu -h 30
#+end_src

** Lines Below Prompt
: STATUS: applied

Lines are drawn *below* the ~Prompt~ instead of next to it.
*** Fullwidth Patch
: STATUS: applied

This *patch* makes sure *lines are not cut off* if the ~Prompt~ is to short and ~Dmenu~ tries to match the rest of the text
** Morecolor
: STATUS: applied

Adds an *additional* ~color scheme~ to [[id:0f0a3583-1efc-495b-b621-602382d9aba6][dmenu]] that is used to highlight the highlight the entries adjacent to the selection in effect making [[id:0f0a3583-1efc-495b-b621-602382d9aba6][dmenu]] more colorful

** Numbers
: STATUS: applied

Small Patch that displays the *number of matched and total items* in the *top right corner* of [[id:0f0a3583-1efc-495b-b621-602382d9aba6][dmenu]] 

** Password
: STATUS: applied

Replaces the input text with dots, basically allowing you to type out a password without prying eyes spying on you

** Preselect
: STATUS: applied

Allows you to ~preselect~ *one of the given items* by *giving a number* with the =-n= ~flag.~
The *input list* is ~zero-based~ (ie: starts with =0=)

** Initial Text
: STATUS: applied

Adds an option to provide preselected text. Use the =-it= ~flag~ to add a preselection
** Printindex
: STATUS: applied

This patch allows ~dmenu~ to print out the ~zero-based index~ of *matched text* instead of the *matched text itself* by giving the =-ix= ~flag.~
Useful if you want to select other items from an ~Array~ based on the given index.
If *no* ~Items~ are selected, ~dmenu~ returns =-1=

** Print Input Text
: STATUS: applied

This patch adds the =-t= ~flag~ which makes =Return= ~key~ to *ignore selection* and *print the input text* to ~stdout~.
The flag basically *swaps* the functions of =Return= and =Shift+Return= ~hotkeys~.

This is mainly aimed for use with surf.
** Center
: STATUS: applied

Places [[id:0f0a3583-1efc-495b-b621-602382d9aba6][dmenu]] at the *center of the screen*. This option can be activated with the =-c= ~flag~.

** Grid
: STATUS: applied

Places available options and matches in a grid like pattern:
+ =-l= specifies the *number of lines*
+ =-g= specifies the *number of columns*

*** Gridnav
: STATUS: applied

This is an extension to the ~Grid~ that allows the ~navigation~ in ~grid form~ with the ~left~ and ~right~ ~keys~

** Border/Borderoption
: STATUS: applied

Allows the Placement of a Border around the [[id:0f0a3583-1efc-495b-b621-602382d9aba6][dmenu]] ~Window~
Option =-bw= can be used to specify this. =0= means now *border*

** XYZ
: STATUS: applied

Gives you more control placement of the [[id:0f0a3583-1efc-495b-b621-602382d9aba6][dmenu]] ~Window~
+ =-x= specifies the offset in ~x-Direction~
+ =-y= specifies the offset in ~y-Direction~
+ =-z= specifies the ~width~ of the Window (used to be =-w= but now conflicts with =-w= ~WindowID~)
+ =-b= if specified, the =-y= offset is calculated from the bottom
+ =-m= specifies the target monitor (=0= if not specified, meaning the ~default window~)
